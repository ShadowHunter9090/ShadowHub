local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "ShadowHub " .. 1.1,
    SubTitle = "Universal Script",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- True Açık False Kapalı Bulanıklaştırır
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.Delete -- MinimizeKeybind olmadığında kullanılır 
})


-- Kanallar

local Tabs = {
    Main = Window:AddTab({ Title = "Home", Icon = "home" }),
    Player = Window:AddTab({ Title = "Player", Icon = "person-standing" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
} 





local Options = Fluent.Options

do
   Fluent:Notify({
        Title = "ShadowHub",
        Content = "ShadowHub Enabled",
        SubContent = "SubContent", -- Opsiyonel
        Duration = 8 -- Mesaj Süresi
    })
  

  Tabs.Main:AddButton({
        Title = "Credits",
        Description = "Shows the Founder",
        Callback = function()
            Window:Dialog({
                Title = "Krediler",
                Content = "Founder:kurutma_makinesi5 and eymen53472",
                Buttons = {
                    {
                        Title = "Ok",
                        Callback = function()
                            print("you have closed the loans")
                        end
                    },
                }
            })
        end
    })

local Slider = Tabs.Player:AddSlider("Slider", {
        Title = "WalkSpeed",
        Description = "This is a WalkSpeed slider.",
        Default = 16,
        Min = 0,
        Max = 10000,
        Rounding = 1,
        Callback = function(Value)
                WalkSpeed = Value game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value 
          Value = WalkSpeed
      end
    })

    Slider:OnChanged(function(Value)
        print("Now it's your new WalkSpeed:", Value)
    end)

    Slider:SetValue(16)


local Slider = Tabs.Player:AddSlider("Slider", {
        Title = "JumpPower",
        Description = "This is a JumpPower slider.",
        Default = 50,
        Min = 0,
        Max = 10000,
        Rounding = 1,
        Callback = function(Value)
            JumpPower = Value 
         game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value 
         Value = JumpPower
      end
    })

    Slider:OnChanged(function(Value)
        print("Now you are jumping New:", Value)
    end)

    Slider:SetValue(50)



-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- InterfaceManager (Allows you to have a interface managment system)

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)


Window:SelectTab(1)

Fluent:Notify({
    Title = "ShadowHub",
    Content = "The script has been loaded.",
    Duration = 8
})


SaveManager:LoadAutoloadConfig() end

